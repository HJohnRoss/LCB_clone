// <auto-generated />
using System;
using LCB_Clone_Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LCB_Clone_Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("BillLegislatorCoSponsor", b =>
                {
                    b.Property<int>("BillId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LegislatorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BillId", "LegislatorId");

                    b.HasIndex("LegislatorId");

                    b.ToTable("BillLegislatorCoSponsor");
                });

            modelBuilder.Entity("BillLegislatorPrimarySponsor", b =>
                {
                    b.Property<int>("BillId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LegislatorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BillId", "LegislatorId");

                    b.HasIndex("LegislatorId");

                    b.ToTable("BillLegislatorPrimarySponsor");
                });

            modelBuilder.Entity("BillModelSessionMeetingModel", b =>
                {
                    b.Property<int>("BillsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PreviousMeetingsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BillsId", "PreviousMeetingsId");

                    b.HasIndex("PreviousMeetingsId");

                    b.ToTable("BillModelSessionMeetingModel");
                });

            modelBuilder.Entity("BillSessionCommitteeSponsor", b =>
                {
                    b.Property<int>("BillId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SessionCommitteeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BillId", "SessionCommitteeId");

                    b.HasIndex("SessionCommitteeId");

                    b.ToTable("BillSessionCommitteeSponsor");
                });

            modelBuilder.Entity("BudgetModelSessionModel", b =>
                {
                    b.Property<int>("BudgetsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MeetingsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BudgetsId", "MeetingsId");

                    b.HasIndex("MeetingsId");

                    b.ToTable("BudgetModelSessionModel");
                });

            modelBuilder.Entity("CommitteeModelLegislatorModel", b =>
                {
                    b.Property<int>("CommitteesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LegislatorsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CommitteesId", "LegislatorsId");

                    b.HasIndex("LegislatorsId");

                    b.ToTable("CommitteeModelLegislatorModel");
                });

            modelBuilder.Entity("CommitteeModelStaffMemberModel", b =>
                {
                    b.Property<int>("CommitteesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StaffMembersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CommitteesId", "StaffMembersId");

                    b.HasIndex("StaffMembersId");

                    b.ToTable("CommitteeModelStaffMemberModel");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.AgendaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Agendas");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.AmendmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BillModelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BillModelId");

                    b.ToTable("Amendments");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.BillModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Digest")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("DiscussedByCommitteeId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EffectLocalGov")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EffectState")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("IntroDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SessionModelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DiscussedByCommitteeId");

                    b.HasIndex("SessionModelId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.BudgetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AgencyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("AgencyNum")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BudgetName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("BudgetNum")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DepartmentNum")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExecBudgetPage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FunctionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FunctionNum")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FundNum")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SessionMeetingModelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubFunctionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SubFunctionNum")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Summary")
                        .HasColumnType("TEXT");

                    b.Property<string>("Synopsis")
                        .HasColumnType("TEXT");

                    b.Property<string>("TextFilePath")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SessionMeetingModelId");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.CommitteeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("House")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("LegislatorsId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("MeetingsId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("StaffId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Committees");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.ExhibitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BillModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BudgetModelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BillModelId");

                    b.HasIndex("BudgetModelId");

                    b.ToTable("Exhibits");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.FiscalNoteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BillModelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BillModelId");

                    b.ToTable("FiscalNotes");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.HearingRoomMeetingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AgendaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CCRoomNumber")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCCMainRoom")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LVRoomNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("MeetingName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("YoutubeLink")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AgendaId");

                    b.ToTable("HearingRoomMeetings");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.JournalModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DayNum")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSenate")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Journals");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.LegislativeMeetingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AgendaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CCRoomNumber")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CommitteeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Datetime")
                        .HasColumnType("TEXT");

                    b.Property<string>("House")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCCMainRoom")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LVRoomNumber")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("MembersId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("StaffId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("YoutubeLink")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AgendaId");

                    b.HasIndex("CommitteeId");

                    b.ToTable("LegislativeMeetings");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.LegislatorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("Affiliations")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Born")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CCOffice")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CCPhone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Children")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("CoSponsorBillsId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("CommitteesId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Education")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HomeAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("HonorsAwards")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSenator")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LVOffice")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("LegislativeMeetingsId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("LegislativeService")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LegislativeTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("OtherAchivements")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("OtherPublicService")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Party")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("PrimarySponsorBillsId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Recreation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("SessionCommitteeModelId")
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("SessionMeetingsId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Spouse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TermEnd")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("VotesId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SessionCommitteeModelId");

                    b.ToTable("Legislators");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.LegislatorVoteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BillId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BillModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LegislatorModelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Vote")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BillModelId");

                    b.HasIndex("LegislatorModelId");

                    b.ToTable("LegislatorVotes");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.SessionCommitteeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("BillsDiscussedId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Fri")
                        .HasColumnType("TEXT");

                    b.Property<string>("House")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("LegislativeMembersId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Mon")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("SponsoredBillsId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("StaffMembersId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Thurs")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tues")
                        .HasColumnType("TEXT");

                    b.Property<string>("Wed")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SessionCommittees");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.SessionMeetingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AgendaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CCRoomNumber")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Datetime")
                        .HasColumnType("TEXT");

                    b.Property<string>("House")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCCMainRoom")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LVRoomNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("MeetingName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MinutesPath")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SessionModelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("YoutubeLink")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AgendaId");

                    b.HasIndex("SessionModelId");

                    b.ToTable("SessionMeetings");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.SessionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CapitalImprovementPath")
                        .HasColumnType("TEXT");

                    b.Property<string>("FiscalReportPath")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProposedExecutiveBudgetPath")
                        .HasColumnType("TEXT");

                    b.Property<string>("SessionDayCalendar")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserManualPath")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.StaffMemberModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("CommitteesId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("MeetingsId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleInitial")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("SessionCommitteesId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("SessionMeetingsId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StaffMembers");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.WorkSessionDocModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("SessionMeetingModelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SessionMeetingModelId");

                    b.ToTable("WorkSessions");
                });

            modelBuilder.Entity("LegislativeMeetingModelLegislatorModel", b =>
                {
                    b.Property<int>("LegislativeMeetingsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MembersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LegislativeMeetingsId", "MembersId");

                    b.HasIndex("MembersId");

                    b.ToTable("LegislativeMeetingModelLegislatorModel");
                });

            modelBuilder.Entity("LegislativeMeetingModelStaffMemberModel", b =>
                {
                    b.Property<int>("MeetingsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StaffId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MeetingsId", "StaffId");

                    b.HasIndex("StaffId");

                    b.ToTable("LegislativeMeetingModelStaffMemberModel");
                });

            modelBuilder.Entity("LegislatorModelSessionMeetingModel", b =>
                {
                    b.Property<int>("MembersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SessionMeetingsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MembersId", "SessionMeetingsId");

                    b.HasIndex("SessionMeetingsId");

                    b.ToTable("LegislatorModelSessionMeetingModel");
                });

            modelBuilder.Entity("SessionCommitteeModelStaffMemberModel", b =>
                {
                    b.Property<int>("SessionCommitteesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StaffMembersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SessionCommitteesId", "StaffMembersId");

                    b.HasIndex("StaffMembersId");

                    b.ToTable("SessionCommitteeModelStaffMemberModel");
                });

            modelBuilder.Entity("SessionMeetingModelStaffMemberModel", b =>
                {
                    b.Property<int>("SessionMeetingsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StaffId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SessionMeetingsId", "StaffId");

                    b.HasIndex("StaffId");

                    b.ToTable("SessionMeetingModelStaffMemberModel");
                });

            modelBuilder.Entity("BillLegislatorCoSponsor", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.BillModel", null)
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LCB_Clone_Backend.Models.LegislatorModel", null)
                        .WithMany()
                        .HasForeignKey("LegislatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BillLegislatorPrimarySponsor", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.BillModel", null)
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LCB_Clone_Backend.Models.LegislatorModel", null)
                        .WithMany()
                        .HasForeignKey("LegislatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BillModelSessionMeetingModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.BillModel", null)
                        .WithMany()
                        .HasForeignKey("BillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LCB_Clone_Backend.Models.SessionMeetingModel", null)
                        .WithMany()
                        .HasForeignKey("PreviousMeetingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BillSessionCommitteeSponsor", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.BillModel", null)
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LCB_Clone_Backend.Models.SessionCommitteeModel", null)
                        .WithMany()
                        .HasForeignKey("SessionCommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BudgetModelSessionModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.BudgetModel", null)
                        .WithMany()
                        .HasForeignKey("BudgetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LCB_Clone_Backend.Models.SessionModel", null)
                        .WithMany()
                        .HasForeignKey("MeetingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CommitteeModelLegislatorModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.CommitteeModel", null)
                        .WithMany()
                        .HasForeignKey("CommitteesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LCB_Clone_Backend.Models.LegislatorModel", null)
                        .WithMany()
                        .HasForeignKey("LegislatorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CommitteeModelStaffMemberModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.CommitteeModel", null)
                        .WithMany()
                        .HasForeignKey("CommitteesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LCB_Clone_Backend.Models.StaffMemberModel", null)
                        .WithMany()
                        .HasForeignKey("StaffMembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.AmendmentModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.BillModel", null)
                        .WithMany("Amendments")
                        .HasForeignKey("BillModelId");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.BillModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.SessionCommitteeModel", "DiscussedByCommittee")
                        .WithMany("BillsDiscussed")
                        .HasForeignKey("DiscussedByCommitteeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LCB_Clone_Backend.Models.SessionModel", null)
                        .WithMany("Bills")
                        .HasForeignKey("SessionModelId");

                    b.Navigation("DiscussedByCommittee");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.BudgetModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.SessionMeetingModel", null)
                        .WithMany("Budgets")
                        .HasForeignKey("SessionMeetingModelId");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.ExhibitModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.BillModel", null)
                        .WithMany("Exhibits")
                        .HasForeignKey("BillModelId");

                    b.HasOne("LCB_Clone_Backend.Models.BudgetModel", null)
                        .WithMany("Exhibits")
                        .HasForeignKey("BudgetModelId");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.FiscalNoteModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.BillModel", null)
                        .WithMany("FiscalNotes")
                        .HasForeignKey("BillModelId");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.HearingRoomMeetingModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.AgendaModel", "Agenda")
                        .WithMany()
                        .HasForeignKey("AgendaId");

                    b.Navigation("Agenda");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.LegislativeMeetingModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.AgendaModel", "Agenda")
                        .WithMany()
                        .HasForeignKey("AgendaId");

                    b.HasOne("LCB_Clone_Backend.Models.CommitteeModel", "Committee")
                        .WithMany("Meetings")
                        .HasForeignKey("CommitteeId");

                    b.Navigation("Agenda");

                    b.Navigation("Committee");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.LegislatorModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.SessionCommitteeModel", null)
                        .WithMany("LegislativeMembers")
                        .HasForeignKey("SessionCommitteeModelId");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.LegislatorVoteModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.BillModel", null)
                        .WithMany("Votes")
                        .HasForeignKey("BillModelId");

                    b.HasOne("LCB_Clone_Backend.Models.LegislatorModel", null)
                        .WithMany("Votes")
                        .HasForeignKey("LegislatorModelId");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.SessionMeetingModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.AgendaModel", "Agenda")
                        .WithMany()
                        .HasForeignKey("AgendaId");

                    b.HasOne("LCB_Clone_Backend.Models.SessionModel", null)
                        .WithMany("Meetings")
                        .HasForeignKey("SessionModelId");

                    b.Navigation("Agenda");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.WorkSessionDocModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.SessionMeetingModel", null)
                        .WithMany("WorkSessionDocs")
                        .HasForeignKey("SessionMeetingModelId");
                });

            modelBuilder.Entity("LegislativeMeetingModelLegislatorModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.LegislativeMeetingModel", null)
                        .WithMany()
                        .HasForeignKey("LegislativeMeetingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LCB_Clone_Backend.Models.LegislatorModel", null)
                        .WithMany()
                        .HasForeignKey("MembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LegislativeMeetingModelStaffMemberModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.LegislativeMeetingModel", null)
                        .WithMany()
                        .HasForeignKey("MeetingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LCB_Clone_Backend.Models.StaffMemberModel", null)
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LegislatorModelSessionMeetingModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.LegislatorModel", null)
                        .WithMany()
                        .HasForeignKey("MembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LCB_Clone_Backend.Models.SessionMeetingModel", null)
                        .WithMany()
                        .HasForeignKey("SessionMeetingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SessionCommitteeModelStaffMemberModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.SessionCommitteeModel", null)
                        .WithMany()
                        .HasForeignKey("SessionCommitteesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LCB_Clone_Backend.Models.StaffMemberModel", null)
                        .WithMany()
                        .HasForeignKey("StaffMembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SessionMeetingModelStaffMemberModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.SessionMeetingModel", null)
                        .WithMany()
                        .HasForeignKey("SessionMeetingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LCB_Clone_Backend.Models.StaffMemberModel", null)
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.BillModel", b =>
                {
                    b.Navigation("Amendments");

                    b.Navigation("Exhibits");

                    b.Navigation("FiscalNotes");

                    b.Navigation("Votes");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.BudgetModel", b =>
                {
                    b.Navigation("Exhibits");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.CommitteeModel", b =>
                {
                    b.Navigation("Meetings");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.LegislatorModel", b =>
                {
                    b.Navigation("Votes");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.SessionCommitteeModel", b =>
                {
                    b.Navigation("BillsDiscussed");

                    b.Navigation("LegislativeMembers");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.SessionMeetingModel", b =>
                {
                    b.Navigation("Budgets");

                    b.Navigation("WorkSessionDocs");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.SessionModel", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Meetings");
                });
#pragma warning restore 612, 618
        }
    }
}
