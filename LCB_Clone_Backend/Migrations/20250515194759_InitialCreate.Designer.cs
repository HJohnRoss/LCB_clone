// <auto-generated />
using System;
using LCB_Clone_Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LCB_Clone_Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
<<<<<<<< HEAD:LCB_Clone_Backend/Migrations/20250515012216_InitialCreate.Designer.cs
    [Migration("20250515012216_InitialCreate")]
========
    [Migration("20250515194759_InitialCreate")]
>>>>>>>> b539814 (api controllers):LCB_Clone_Backend/Migrations/20250515194759_InitialCreate.Designer.cs
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("BillLegislatorCoSponsor", b =>
                {
                    b.Property<int>("BillId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LegislatorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BillId", "LegislatorId");

                    b.HasIndex("LegislatorId");

                    b.ToTable("BillLegislatorCoSponsor");
                });

            modelBuilder.Entity("BillLegislatorPrimarySponsor", b =>
                {
                    b.Property<int>("BillId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LegislatorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BillId", "LegislatorId");

                    b.HasIndex("LegislatorId");

                    b.ToTable("BillLegislatorPrimarySponsor");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.AgendaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BillsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BillsId");

                    b.ToTable("Agendas");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.AmendmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BillId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.ToTable("Amendments");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.BillModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.CommitteeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Fri")
                        .HasColumnType("TEXT");

                    b.Property<string>("House")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("LegislatorModelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mon")
                        .HasColumnType("TEXT");

                    b.Property<string>("Thurs")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tues")
                        .HasColumnType("TEXT");

                    b.Property<string>("Wed")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LegislatorModelId");

                    b.ToTable("Committees");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.ExhibitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BillId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.ToTable("Exhibits");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.FiscalNoteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BillId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.ToTable("FiscalNotes");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.HearingRoomMeetingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AgendaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CCRoomNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCCMainRoom")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LVRoomNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("MeetingName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("YoutubeLink")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AgendaId");

                    b.ToTable("HearingRoomMeetings", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.LegislatorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("Affiliations")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Born")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CCOffice")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CCPhone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Children")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Education")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HomeAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("HonorsAwards")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LVOffice")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("LegislativeMeetingModelId")
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("LegislativeService")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LegislativeTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("OtherAchivements")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("OtherPublicService")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Party")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Recreation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Spouse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TermEnd")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LegislativeMeetingModelId");

                    b.ToTable("Legislators");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.LegislatorVoteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BillModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LegislatorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Vote")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BillModelId");

                    b.HasIndex("LegislatorId");

                    b.ToTable("LegislatorVoteModel");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.StaffMemberModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("LegislativeMeetingModelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MiddleInitial")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LegislativeMeetingModelId");

                    b.ToTable("StaffMembers");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.LegislativeMeetingModel", b =>
                {
                    b.HasBaseType("LCB_Clone_Backend.Models.HearingRoomMeetingModel");

                    b.Property<int?>("BillModelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("House")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasIndex("BillModelId");

                    b.ToTable("LegislativeMeetings", (string)null);
                });

            modelBuilder.Entity("BillLegislatorCoSponsor", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.BillModel", null)
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LCB_Clone_Backend.Models.LegislatorModel", null)
                        .WithMany()
                        .HasForeignKey("LegislatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BillLegislatorPrimarySponsor", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.BillModel", null)
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LCB_Clone_Backend.Models.LegislatorModel", null)
                        .WithMany()
                        .HasForeignKey("LegislatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.AgendaModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.BillModel", "Bills")
                        .WithMany()
                        .HasForeignKey("BillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bills");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.AmendmentModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.BillModel", "Bill")
                        .WithMany("Amendments")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.CommitteeModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.LegislatorModel", null)
                        .WithMany("Committees")
                        .HasForeignKey("LegislatorModelId");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.ExhibitModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.BillModel", "Bill")
                        .WithMany("Exhibits")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.FiscalNoteModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.BillModel", "Bill")
                        .WithMany("FiscalNotes")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.HearingRoomMeetingModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.AgendaModel", "Agenda")
                        .WithMany()
                        .HasForeignKey("AgendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agenda");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.LegislatorModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.LegislativeMeetingModel", null)
                        .WithMany("LegislativeMembers")
                        .HasForeignKey("LegislativeMeetingModelId");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.LegislatorVoteModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.BillModel", null)
                        .WithMany("Votes")
                        .HasForeignKey("BillModelId");

                    b.HasOne("LCB_Clone_Backend.Models.LegislatorModel", "Legislator")
                        .WithMany()
                        .HasForeignKey("LegislatorId");

                    b.Navigation("Legislator");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.StaffMemberModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.LegislativeMeetingModel", null)
                        .WithMany("MeetingStaff")
                        .HasForeignKey("LegislativeMeetingModelId");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.LegislativeMeetingModel", b =>
                {
                    b.HasOne("LCB_Clone_Backend.Models.BillModel", null)
                        .WithMany("PreviousMeetings")
                        .HasForeignKey("BillModelId");

                    b.HasOne("LCB_Clone_Backend.Models.HearingRoomMeetingModel", null)
                        .WithOne()
                        .HasForeignKey("LCB_Clone_Backend.Models.LegislativeMeetingModel", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.BillModel", b =>
                {
                    b.Navigation("Amendments");

                    b.Navigation("Exhibits");

                    b.Navigation("FiscalNotes");

                    b.Navigation("PreviousMeetings");

                    b.Navigation("Votes");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.LegislatorModel", b =>
                {
                    b.Navigation("Committees");
                });

            modelBuilder.Entity("LCB_Clone_Backend.Models.LegislativeMeetingModel", b =>
                {
                    b.Navigation("LegislativeMembers");

                    b.Navigation("MeetingStaff");
                });
#pragma warning restore 612, 618
        }
    }
}
